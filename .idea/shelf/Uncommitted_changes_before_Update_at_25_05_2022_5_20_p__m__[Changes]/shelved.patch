Index: LoginUsuario.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ****** Librerias Usadas ****** #\r\n\r\nfrom tkinter import *\r\nfrom tkinter import ttk, messagebox\r\nfrom PIL import Image, ImageTk\r\nfrom tkinter.simpledialog import askstring\r\nfrom tkinter.messagebox import showinfo\r\n\r\n# ****** Metodos de otros archivos ******#\r\n\r\nfrom gestionUsuario import *\r\nfrom BaseDatos import *\r\nfrom Usuario import *\r\n\r\nuser = Usuario(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\")\r\n\r\n\r\n# ****** Clase loginUsuario ****** #\r\n\r\nclass loginUsuario:\r\n    def __init__(self, rootLogin):\r\n        self.rootLogin = rootLogin\r\n        self.rootLogin.title(\"Sistema de inventario y Ventas MotoSocios\")\r\n        self.rootLogin.geometry(\"1360x768+560+312\")\r\n        self.rootLogin.resizable(1, 1)\r\n        self.rootLogin.iconbitmap(\"Imagenes\\iconoInterfaz.ico\")\r\n        self.rootLogin.attributes('-fullscreen',True)\r\n\r\n        # ****** Imagen de fondo ****** #\r\n        self.bg = ImageTk.PhotoImage(file=\"Imagenes/FondoInterfaz2.png\")\r\n        Label(self.rootLogin, image=self.bg).place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        # ****** Frame Login ****** #\r\n        frameLogin = Frame(self.rootLogin, bg=\"#18344A\")\r\n        frameLogin.place(x=500, y=110, width=345, height=450)\r\n        Label(frameLogin, text=\"INICIO SESIÓN\", font=(\"comic sass MS\", 25, \"bold\"), bg=\"#18344A\",fg=\"white\").place(x=50, y=20)\r\n\r\n        # ****** Label ID ****** #\r\n        Label(frameLogin, text=\"Identificación: \", font=(\"comic sass MS\", 16, \"bold\"), bg=\"#18344A\", fg=\"white\").place( x=50, y=80)\r\n        self.cuadroID = Entry(frameLogin, font=(\"comic sass MS\", 16),width=22)\r\n        self.cuadroID.place(x=50, y=120)\r\n\r\n        # ****** Label contraseña ****** #\r\n        Label(frameLogin, text=\"Contraseña: \", font=(\"comic sass MS\", 16, \"bold\"), bg=\"#18344A\", fg=\"white\").place(x=50, y=160)\r\n        self.cuadroPass = Entry(frameLogin, show=\"*\", font=(\"comic sass MS\", 16,),width=22)\r\n        self.cuadroPass.place(x=50, y=200)\r\n\r\n        # ****** Boton Ingresar ****** #\r\n        BotonIngresar = Button(frameLogin, text=\"Ingresar \", command=self.abrirUsuarioSegunRol, font=(\"comic sass MS\", 15),bg=\"gray\", fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonIngresar.place(x=75,y=280, width=200)\r\n\r\n        # ****** Boton Salir ****** #\r\n\r\n        BotonSalir = Button(frameLogin, text=\"Salir\", command=self.rootLogin.destroy,font=(\"comic sass MS\", 15), bg=\"gray\", fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonSalir.place(x=75, y=330, width=200)\r\n\r\n        # ****** Boton Olvide mi contraseña ****** #\r\n\r\n        BotonOlvidePass = Button(frameLogin, text=\"Olvide mi contraseña\", font=(\"comic sass MS\", 15), bg=\"gray\", fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonOlvidePass.place(x=75, y=380, width=200)\r\n\r\n    def abrirUsuarioSegunRol(self):\r\n\r\n        print(self.cuadroID.get())\r\n\r\n        if (self.cuadroID.get() == '' or self.cuadroPass.get() == ''):\r\n            showinfo('Error Inicio de Sesión', 'Campos Obligatorios')\r\n\r\n        else:\r\n\r\n            gestionUsuarios = gestionUsuario()\r\n            user2 = gestionUsuarios.login_usuario(self.cuadroID.get(), self.cuadroPass.get())\r\n\r\n            user = user2\r\n\r\n            if (user2.get_cargo() == 'administrador'):\r\n                print(\"ventana adminCC\")\r\n                self.rootLogin.destroy()\r\n                import GUIAdministrador as cc\r\n                cc.usuario = user2\r\n                cc.iniciar()\r\n\r\n            elif (user2.get_cargo() == 'vendedor'):\r\n                print(\"ventana adminRR\")\r\n                self.rootLogin.destroy()\r\n                import GUIVendedor as cc\r\n                cc.usuario = user2\r\n                cc.iniciar()\r\n\r\n\r\n            elif (user2.get_cargo() == 'bodega'):\r\n                print(\"ventana OperarioRR\")\r\n                self.rootLogin.destroy()\r\n                import GUIBodeguista as cc\r\n                cc.usuario = user2\r\n                cc.iniciar()\r\n\r\n            elif (user2.get_cargo() == 'contador'):\r\n                print(\"ventana OperarioRR\")\r\n                self.rootLogin.destroy()\r\n                import GUIContador as cc\r\n                cc.usuario = user2\r\n                cc.iniciar()\r\n            else:\r\n                messagebox.showinfo(\"Aviso\", \"El email o contraseña son incorrectos\")\r\n\r\n\r\ndef iniciar():\r\n    rootLogin = Tk()\r\n    obj = loginUsuario(rootLogin)\r\n    rootLogin.mainloop()\r\n\r\nrootLogin = Tk()\r\nobj = loginUsuario(rootLogin)\r\nrootLogin.mainloop()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/LoginUsuario.py b/LoginUsuario.py
--- a/LoginUsuario.py	(revision d3252aca4a5085f7dae82a19691ede9a896634c2)
+++ b/LoginUsuario.py	(date 1653407443046)
@@ -67,7 +67,6 @@
             showinfo('Error Inicio de Sesión', 'Campos Obligatorios')
 
         else:
-
             gestionUsuarios = gestionUsuario()
             user2 = gestionUsuarios.login_usuario(self.cuadroID.get(), self.cuadroPass.get())
 
Index: GUIGestionCliente.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ****** Librerias Usadas ****** #\r\n\r\nfrom tkinter import *\r\nfrom tkinter import ttk\r\nfrom PIL import Image, ImageTk\r\n\r\n# ****** Metodos de otros archivos ******#\r\n\r\nfrom Usuario import *\r\nimport Cliente as us\r\nfrom gestionCliente import *\r\ncliente=us.Cliente(\"\",\"\",\"\",\"\",\"\",\"\",\"\")\r\n\r\n# ****** Ventanas de dialogo ******#\r\n\r\nfrom tkinter.simpledialog import askstring\r\nfrom tkinter.messagebox import showinfo\r\n\r\n\r\n# ****** Clase GUIGestCli ****** #\r\n\r\nclass GUIGestCli:\r\n    def __init__(self, rootGestCli):\r\n        self.rootGestCli = rootGestCli\r\n        self.rootGestCli.title(\"Sistema de Inventario y Ventas MotoSocios\")\r\n        self.rootGestCli.geometry(\"1360x768+560+312\")\r\n        self.rootGestCli.resizable(1, 1)\r\n        self.rootGestCli.iconbitmap(\"Imagenes\\iconoInterfaz.ico\")\r\n        self.rootGestCli.attributes('-fullscreen', True)\r\n\r\n        # ****** Logo de Fondo ****** #\r\n\r\n        self.bg = ImageTk.PhotoImage(file=\"Imagenes\\FondoInterfaz2.png\")\r\n        Label(self.rootGestCli, image=self.bg).place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        # ****** Frame Botones Opciones Side Izq ****** #\r\n\r\n        frameIzquierdoCli = Frame(self.rootGestCli, bg=\"#18344A\")\r\n        frameIzquierdoCli.place(x=85, y=85, width=480, height=530)\r\n        Label(frameIzquierdoCli, text=\"Gestion Cliente\", font=(\"comic sans MS\", 23, \"bold\"), bg=\"#18344A\", fg=\"white\").place(x=125, y=30)\r\n\r\n        # ****** Boton Home ******#\r\n\r\n        BotonHome = Button(frameIzquierdoCli, text=\"Inicio\", command=self.volver ,font=(\"comic sans MS\", 15), bg=\"#18344A\", fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonHome.place(x=30, y=30, width=70,height=35)\r\n\r\n        # ****** Boton Consultar Clientes ****** #\r\n\r\n        BotonConsultarCliente = Button(frameIzquierdoCli, text=\"Consultar Clientes\",command=self.consultarCliente, font=(\"comic sans MS\", 15), bg=\"gray\", fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonConsultarCliente.place(x=120, y=120, width=240)\r\n\r\n        # ****** Boton Crear Clientes ****** #\r\n\r\n        BotonCrearCliente = Button(frameIzquierdoCli, text=\"Crear Cliente\", command=self.crear,font=(\"comic sans MS\", 15), bg=\"gray\", fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonCrearCliente.place(x=120, y=180, width=240)\r\n\r\n        # ******Boton Eliminar Cliente ****** #\r\n\r\n        BotonEliminarCliente = Button(frameIzquierdoCli, text=\"Eliminar Cliente\", font=(\"comic sans MS\", 15), bg=\"gray\", fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonEliminarCliente.place(x=120, y=240, width=240)\r\n\r\n        # ****** Frame inicio Productos Side Der ****** #\r\n        self.frameDerechoCli = Frame(self.rootGestCli, bg=\"#18344A\")\r\n        self.frameDerechoCli.place(x=600, y=85, width=700, height=530)\r\n\r\n        # ******* Titulo Frame Cliente ****** #\r\n        Label(self.frameDerechoCli, text=\"Clientes\", font=(\"comic sans MS\", 24, \"bold\"), bg=\"#18344A\",\r\n              fg=\"white\").place(x=280, y=20)\r\n\r\n        # ****** Datos del perfil ****** #\r\n\r\n        self.listboxUsuario = Listbox(self.frameDerechoCli, width=40, heigh=9, bg=\"#18344A\", fg=\"white\",\r\n                                      font=(\"comic sans MS\", 20))\r\n\r\n        self.CargarInfoUsuarioEnLabels(self.listboxUsuario)\r\n\r\n        self.listboxUsuario.place(x=50, y=86)\r\n\r\n        # ****** Boton Modificar Datos ****** #\r\n\r\n    def consultarCliente(self):\r\n        self.auxId = askstring('Modificación de información', 'Ingrese el NIT de un Cliente')\r\n        self.frameDerechoCli.place_forget()\r\n        self.mostrarCli()\r\n\r\n    def mostrarCli(self):\r\n        frameDerechoAdmin = Frame(self.rootGestCli, bg=\"#18344A\")\r\n        frameDerechoAdmin.place(x=600, y=85, width=700, height=530)\r\n\r\n        # ******* Titulo Frame Bienvenido ****** #\r\n\r\n        Label(frameDerechoAdmin, text=\" Modificar\", font=(\"comic sans MS\", 24, \"bold\"), bg=\"#18344A\",\r\n              fg=\"white\").place(x=320, y=20)\r\n\r\n        # ****** Datos del perfil ****** #\r\n\r\n        Label(frameDerechoAdmin, text=\"NIT: \", font=(\"comic sans MS\", 20,), bg=\"#18344A\", fg=\"white\").place(\r\n            x=80, y=60)\r\n        Label(frameDerechoAdmin, text=\"Nombre: \", font=(\"comic sans MS\", 20), bg=\"#18344A\", fg=\"white\").place(x=80,\r\n                                                                                                              y=100)\r\n        Label(frameDerechoAdmin, text=\"Apellido 1: \", font=(\"comic sans MS\", 20,), bg=\"#18344A\", fg=\"white\").place(x=80,\r\n                                                                                                                 y=140)\r\n        Label(frameDerechoAdmin, text=\"Apellido 2:\", font=(\"comic sans MS\", 20,), bg=\"#18344A\", fg=\"white\").place(x=80,\r\n                                                                                                                y=180)\r\n        Label(frameDerechoAdmin, text=\"Tipo Cliente :\", font=(\"comic sans MS\", 20,), bg=\"#18344A\", fg=\"white\").place(x=80,\r\n                                                                                                                 y=220)\r\n        Label(frameDerechoAdmin, text=\"Direccion Calle:\", font=(\"comic sans MS\", 20,), bg=\"#18344A\", fg=\"white\").place(x=80,\r\n                                                                                                             y=260)\r\n        Label(frameDerechoAdmin, text=\"Direccion Numero:\", font=(\"comic sans MS\", 20,), bg=\"#18344A\", fg=\"white\").place(\r\n                                                                                                            x=80,y=300)\r\n\r\n        self.CargarInfoUsuarioEnLabels2()\r\n\r\n        self.listboxUsuario = Listbox(frameDerechoAdmin, width=20, heigh=7, bg=\"#18344A\", fg=\"white\",\r\n                                      font=(\"comic sans MS\", 20,))\r\n\r\n        self.listboxUsuario.insert(0, self.nit_cli)\r\n        self.listboxUsuario.insert(1, self.nom_cli)\r\n        self.listboxUsuario.insert(2, self.apePa_cli)\r\n        self.listboxUsuario.insert(3, self.apeMa_cli)\r\n        self.listboxUsuario.insert(4, self.tipo_cli)\r\n        self.listboxUsuario.insert(5, self.dirCa_cli)\r\n        self.listboxUsuario.insert(6, self.dirNu_cli)\r\n\r\n        self.listboxUsuario.place(x=320, y=66)\r\n\r\n        BotonModificarDatos = Button(frameDerechoAdmin, text=\"Modificar datos\",\r\n                                     command=self.retornarSelecListBoxUsuario, font=(\"comic sans MS\", 15), bg=\"gray\",\r\n                                     fg=\"white\", bd=5, cursor=\"hand2\")\r\n        BotonModificarDatos.place(x=80, y=400, width=240)\r\n    \r\n    def retornarSelecListBoxUsuario(self):\r\n        gestionUsuarios = gestionCliente()\r\n        aux = self.listboxUsuario.curselection()\r\n        if (self.listboxUsuario.selection_includes(0)):\r\n            print(aux)\r\n            askstring.iconbitmap(\"Imagenes\\iconoInterfas.ico\")\r\n            aux2 = askstring('Modificación de información', 'Ingrese el NIT de cliente')\r\n\r\n            if (aux2 == None):\r\n                showinfo('Modificación de información', 'No se realizó ningun cambio')\r\n            else:\r\n                showinfo('Modificación de información', 'Tu nombre quedó:  {}'.format(aux2))\r\n\r\n                gestionUsuarios.modificar_nit(aux2, self.nit_cli)\r\n                print(aux2)\r\n\r\n        if (self.listboxUsuario.selection_includes(1)):\r\n            print(aux)\r\n            aux2 = askstring('Modificación de información', 'Ingrese el nuevo nombre de cliente')\r\n            if (aux2 == None):\r\n                showinfo('Modificación de información', 'No se realizó ningun cambio')\r\n            else:\r\n                showinfo('Modificación de información', 'Tus telefono quedaron: {}'.format(aux2))\r\n                gestionUsuarios.modificar_nombre(aux2, self.nit_cli)\r\n            print(aux2)\r\n\r\n        if (self.listboxUsuario.selection_includes(2)):\r\n            print(aux)\r\n            aux3 = askstring('Modificación de información', 'Ingrese el nuevo Apellido Paterno de cliente')\r\n            if (aux3 == None):\r\n                showinfo('Modificación de información', 'No se realizó ningun cambio')\r\n            else:\r\n                showinfo('Modificación de información', 'Tus telefono quedaron: {}'.format(aux3))\r\n                gestionUsuarios.modificar_apellido1(aux3, self.nit_cli)\r\n            print(aux3)\r\n\r\n        if (self.listboxUsuario.selection_includes(3)):\r\n            print(aux)\r\n            aux4 = askstring('Modificación de información', 'Ingrese el Apellido Materno de cliente')\r\n            if (aux4 == None):\r\n                showinfo('Modificación de información', 'No se realizó ningun cambio')\r\n            else:\r\n                showinfo('Modificación de información', 'Tus telefono quedaron: {}'.format(aux4))\r\n                gestionUsuarios.modificar_apellido2(aux4, self.nit_cli)\r\n            print(aux4)\r\n\r\n        if (self.listboxUsuario.selection_includes(4)):\r\n            print(aux)\r\n            aux5 = askstring('Modificación de información', 'Ingrese el tipo de cliente de cliente')\r\n            if (aux5 == None):\r\n                showinfo('Modificación de información', 'No se realizó ningun cambio')\r\n            else:\r\n                showinfo('Modificación de información', 'Tus telefono quedaron: {}'.format(aux5))\r\n                gestionUsuarios.modificar_telefono(aux5, self.nit_cli)\r\n            print(aux5)\r\n\r\n        if (self.listboxUsuario.selection_includes(5)):\r\n            print(aux)\r\n            aux6 = askstring('Modificación de información', 'Ingrese el nuevo Direccion Calle de cliente')\r\n            if (aux6 == None):\r\n                showinfo('Modificación de información', 'No se realizó ningun cambio')\r\n            else:\r\n                showinfo('Modificación de información', 'Tus telefono quedaron: {}'.format(aux6))\r\n                gestionUsuarios.modificar_dirCalle(aux6, self.nit_cli)\r\n            print(aux6)\r\n\r\n        if (self.listboxUsuario.selection_includes(6)):\r\n            print(aux)\r\n            aux6 = askstring('Modificación de información', 'Ingrese el nuevo Direccion Numero de cliente')\r\n            if (aux6 == None):\r\n                showinfo('Modificación de información', 'No se realizó ningun cambio')\r\n            else:\r\n                showinfo('Modificación de información', 'Tus telefono quedaron: {}'.format(aux6))\r\n                gestionUsuarios.modificar_dirNum(aux6, self.nit_cli)\r\n            print(aux6)\r\n\r\n    def CargarInfoUsuarioEnLabels2(self):\r\n        gestionUsuarios = gestionCliente()\r\n        self.nit_cli = gestionUsuarios.obtener_nit(self.auxId)\r\n        self.nom_cli = gestionUsuarios.obtener_nombre(self.auxId)\r\n        self.apePa_cli = gestionUsuarios.obtener_apellidoPaterno(self.auxId)\r\n        self.apeMa_cli = gestionUsuarios.obtener_apellidoMaterno(self.auxId)\r\n        self.tipo_cli = gestionUsuarios.obtener_tipo(self.auxId)\r\n        self.dirCa_cli = gestionUsuarios.obtener_dirCalle(self.auxId)\r\n        self.dirNu_cli = gestionUsuarios.obtener_dirNumero(self.auxId)\r\n\r\n    def crear(self):\r\n        self.rootGestCli.destroy()\r\n        import registroCliente as reg\r\n        reg.iniciar()\r\n\r\n    def CargarInfoUsuarioEnLabels(self, listboxUsuario):\r\n        gestionUsuarios =gestionCliente()\r\n        listaDatos = gestionUsuarios.obtenerTodos()\r\n\r\n        for x in listaDatos:\r\n            listboxUsuario.insert(END, x)\r\n\r\n    def volver(self):\r\n        self.rootGestCli.destroy()\r\n        import  GUIAdministrador as adm\r\n        adm.iniciar()\r\ndef gestionProducto(self):\r\n    self.rootGestCli.destroy()\r\n    import GUIGestionProducto as GesProd\r\n    GesProd.GesProdInicio()\r\n\r\n\r\n\r\ndef iniciar():\r\n    rootGestCli = Tk()\r\n    obj = GUIGestCli(rootGestCli)\r\n    rootGestCli.mainloop()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GUIGestionCliente.py b/GUIGestionCliente.py
--- a/GUIGestionCliente.py	(revision d3252aca4a5085f7dae82a19691ede9a896634c2)
+++ b/GUIGestionCliente.py	(date 1653517236468)
@@ -229,15 +229,13 @@
 
     def volver(self):
         self.rootGestCli.destroy()
-        import  GUIAdministrador as adm
+        import  GUIVendedor as adm
         adm.iniciar()
 def gestionProducto(self):
     self.rootGestCli.destroy()
     import GUIGestionProducto as GesProd
     GesProd.GesProdInicio()
 
-
-
 def iniciar():
     rootGestCli = Tk()
     obj = GUIGestCli(rootGestCli)
